{"version":3,"sources":["services/persons.js","App.js","reportWebVitals.js","index.js"],"names":["baseUrl","axios","get","then","response","data","newObject","post","id","put","delete","Notification","notificationObj","text","style","type","className","Filter","props","onChange","value","newFilter","PersonForm","onSubmit","handleNameChange","newName","handleNumberChange","newNumber","Persons","personsToShow","handleDelete","map","person","i","name","number","onClick","App","useState","persons","setPersons","setNewName","setNewNumber","setNewFilter","newNotification","setNotification","useEffect","personService","initialPersons","catch","error","console","log","setTimeout","filter","toLowerCase","includes","event","target","preventDefault","some","window","confirm","personObject","find","p","returnedPerson","concat","returnedData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.77cd6a01.chunk.js","sourcesContent":["import axios from 'axios'\r\nconst baseUrl = \"/api/persons\"\r\n\r\nconst getAll = () => {\r\n    const request = axios.get(baseUrl)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst create = newObject => {\r\n    const request = axios.post(baseUrl,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst update = (id, newObject) => {\r\n    const request = axios.put(`${baseUrl}/${id}`,newObject)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nconst remove = (id) => {\r\n    const request = axios.delete(`${baseUrl}/${id}`)\r\n    return request.then(response => response.data)\r\n}\r\n\r\nexport default {getAll, create, update, remove}","import React, {useEffect, useState} from 'react'\nimport personService from \"./services/persons\";\n\nconst Notification = ({notificationObj}) => {\n    if (notificationObj.text === \"\") {\n        return null\n    }\n\n    let style = \"errorMessage\"\n    if (notificationObj.type === \"success\") {\n        style = \"successMessage\"\n    }\n\n    return (\n        <div className={style}>\n            {notificationObj.text}\n        </div>\n    )\n\n}\n\nconst Filter = (props) => {\n\n    return (\n        <div>\n            Filter shown with <input onChange={props.onChange} value={props.newFilter}/>\n        </div>\n    )\n}\n\nconst PersonForm = (props) => {\n\n    return (\n        <form onSubmit={props.onSubmit}>\n            <div>\n                name: <input onChange={props.handleNameChange} value={props.newName}/>\n            </div>\n            <div>\n                number: <input onChange={props.handleNumberChange} value={props.newNumber}/></div>\n            <div>\n                <button type=\"submit\">add</button>\n            </div>\n        </form>\n    )\n}\n\nconst Persons = ({personsToShow, handleDelete}) => {\n\n    return (\n        <ul>\n            {personsToShow.map((person, i) =>\n                <div key={i}>{person.name} {person.number}\n                    <button onClick={() => handleDelete(person.id)}>delete</button>\n                </div>\n            )}\n        </ul>\n    )\n}\n\nconst App = () => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [newFilter, setNewFilter] = useState('')\n    const [newNotification, setNotification] = useState({text: \"\", type: null})\n\n    useEffect(() => {\n        personService\n            .getAll()\n            .then(initialPersons => {\n                setPersons(initialPersons)\n            }).catch(error => {\n                console.log(error)\n            setNotification({text: error.response.data.error, type: \"error\"})\n            setTimeout(() => {setNotification({text: \"\", type: null})}, 5000)\n        })\n    }, [])\n\n    const handleNameChange = (event) => {\n        setNewName(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n        setNewFilter(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n        setNewNumber(event.target.value)\n    }\n\n    const personsToShow = persons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()))\n\n    const addName = (event) => {\n        event.preventDefault()\n\n        if (persons.some((person) => person.name === newName)) {\n            if (window.confirm(`${newName} is already added to the phonebook. Replace the old number with this new one?`)) {\n                const personObject = {name: newName, number: newNumber}\n                personService\n                    .update(persons.find(p => p.name === newName).id, personObject)\n                    .then(returnedPerson => {\n                        setPersons(persons.map(p => p.name !== newName ? p : returnedPerson))\n                        setNewName('')\n                        setNewNumber('')\n\n                        setNotification({text: `The number for ${newName} has successfully been updated`, type: \"success\"})\n                        setTimeout(() => {setNotification({text: \"\", type: null})}, 5000)\n                    }).catch(error => {\n\n                    setNotification({text: `The contact ${newName} has already been removed from the server`, type: \"error\"})\n                    setTimeout(() => {setNotification({text: \"\", type: null})}, 5000)\n                })\n\n            }\n        } else {\n            const personObject = {name: newName, number: newNumber}\n            personService\n                .create(personObject)\n                .then(returnedPerson => {\n                    setPersons(persons.concat(returnedPerson))\n                    setNewName('')\n                    setNewNumber('')\n\n                    setNotification({text: `The number for ${newName} has successfully been added`, type: \"success\"})\n                    setTimeout(() => {setNotification({text: \"\", type: null})}, 5000)\n                })\n                .catch(error => {\n                    setNotification({text: error.response.data.error, type: \"error\"})\n                    setTimeout(() => {setNotification({text: \"\", type: null})}, 5000)\n                })\n        }\n    }\n\n    const deleteName = id => {\n        if (window.confirm(`Delete ${persons.find(person => person.id === id).name}?`)) {\n            personService\n                .remove(id)\n                .then(returnedData => {\n                    setPersons(persons.filter(person => person.id !== id))\n                }).catch(error => {\n                setNotification({text: error.response.data.error, type: \"error\"})\n                setTimeout(() => {setNotification({text: \"\", type: null})}, 5000)\n            })\n        }\n    }\n\n    return (\n        <div>\n            <h2>Phonebook</h2>\n            <Notification notificationObj={newNotification} />\n            <Filter onChange={handleFilterChange} newFilter={newFilter}/>\n            <h2>Add new number</h2>\n            <PersonForm\n                onSubmit={addName}\n                handleNameChange={handleNameChange}\n                handleNumberChange={handleNumberChange}\n                newName={newName}\n                newNumber={newNumber}\n            />\n            <h2>Numbers</h2>\n            <Persons personsToShow={personsToShow} handleDelete={deleteName}/>\n        </div>\n    )\n}\n\nexport default App","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}